{"version":3,"sources":["components/loader/Loader.jsx","components/searchBar/SearchBar.jsx","components/imageGallery/imageGalleryItem/ImageGalleryItem.jsx","components/imageGallery/ImageGallery.jsx","components/modal/Modal.jsx","components/button/Button.jsx","services.js","App.js","index.js"],"names":["LoaderComponent","type","color","height","width","SearchBar","onSubmit","useState","inputValue","setInputValue","className","e","preventDefault","value","onChange","target","placeholder","ImageGalleryItem","item","onShow","onClick","largeImageURL","src","webformatURL","ImageGallery","images","map","id","modalRoot","document","querySelector","Modal","closeModal","key","props","onClose","window","addEventListener","this","removeEventListener","createPortal","children","Component","Button","onLoadMore","fetchImages","query","page","axios","get","baseUrl","initialState","isLoading","error","largeImg","isModal","App","state","setState","useEffect","getFetchImages","a","data","imagesDataArr","hits","prevState","scrollTo","top","body","scrollHeight","behavior","img","Loader","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"6RAKeA,EAJS,WACpB,OAAS,cAAC,IAAD,CAAQC,KAAK,SAASC,MAAM,UAAUC,OAAQ,GAAIC,MAAO,MCiCvDC,EAhCG,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAAc,EACEC,mBAAS,IADX,mBAC3BC,EAD2B,KACfC,EADe,KAahC,OACE,wBAAQC,UAAU,YAAlB,SACI,uBAAMJ,SARO,SAACK,GACpBA,EAAEC,iBACFN,EAASE,GACTC,EAAc,KAKsBC,UAAU,aAAxC,UACE,wBAAQT,KAAK,SAASS,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVT,KAAK,OACLY,MAAOL,EACPM,SArBS,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBN,EAAcM,EAAOF,QAqBXG,YAAY,mCCrBTC,EANU,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,OAC7B,OAAS,oBAAIT,UAAU,mBAAmBU,QAAS,kBAAKD,EAAOD,EAAKG,gBAA3D,SACT,qBAAKC,IAAKJ,EAAKK,aAAcb,UAAU,8BCM5Bc,EANM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQN,EAAa,EAAbA,OAC9B,OAAO,oBAAIT,UAAU,eAAd,SACFe,EAAOC,KAAI,SAACR,GAAD,OAAS,cAAC,EAAD,CAAgCA,KAAMA,EAAMC,OAAQA,GAA7BD,EAAKS,U,gCCDjDC,EAAYC,SAASC,cAAc,eA2B1BC,E,4MAhBbC,WAAa,SAACrB,GACE,WAAVA,EAAEsB,KACJ,EAAKC,MAAMC,W,uDAVf,WACEC,OAAOC,iBAAiB,UAAWC,KAAKN,c,kCAG1C,WACEI,OAAOG,oBAAoB,UAAWD,KAAKN,c,oBAS7C,WACE,OAAOQ,uBACL,qBAAK9B,UAAU,UAAUU,QAASkB,KAAKJ,MAAMC,QAA7C,SACE,qBAAKzB,UAAU,QAAf,SAAwB4B,KAAKJ,MAAMO,aAErCb,O,GApBcc,aCDLC,EAJA,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,WACb,OAAS,wBAAQ3C,KAAK,SAASmB,QAASwB,EAAYlC,UAAU,SAArD,wB,iBCMAmC,EAAc,SAACC,EAAOC,GACjC,OAAOC,IAAMC,IAPC,8BAOaH,EALb,SAK+BC,EAA5BG,gGCAbC,G,MAAe,CACnB1B,OAAQ,GACN2B,WAAW,EACXC,MAAO,KACPP,MAAO,GACPC,KAAM,EACNO,SAAU,GACVC,SAAS,IA4EEC,EA1EH,WAAO,IAAD,EACUjD,mBAAS4C,GADnB,mBACTM,EADS,KACFC,EADE,KAGhBC,qBAAU,WAAO,IACPb,EAA2BW,EAA3BX,MAAOC,EAAoBU,EAApBV,KAAoBU,EAAdL,WAEnBQ,EAAed,EAAOC,KAEvB,CAACU,EAAML,YAEV,IAIMQ,EAAc,uCAAG,WAAOd,EAAOC,GAAd,mBAAAc,EAAA,+EAEIhB,EAAYC,EAAOC,GAFvB,gBAEXe,EAFW,EAEXA,KACFC,EAAgBD,EAAKE,KAAKtC,KAC9B,YACE,MAAO,CAAEC,GAD8B,EAAtCA,GACYJ,aAD0B,EAAlCA,aACsBF,cADY,EAApBA,kBAIvBqC,GAAS,SAACO,GACR,OAAO,2BACFA,GADL,IAEExC,OAAO,GAAD,mBAAMwC,EAAUxC,QAAhB,YAA2BsC,IACjChB,KAAMkB,EAAUlB,KAAO,EACvBK,WAAW,OAGXK,EAAMF,SACRnB,OAAO8B,SAAS,CACdC,IAAKtC,SAASuC,KAAKC,aACnBC,SAAU,WAnBK,kDAwBnBZ,GAAS,SAAAO,GAAS,kCAAQA,GAAR,IAAmBZ,MAAK,KAAED,WAAW,OAxBpC,0DAAH,wDA2Cd3B,EAAyCgC,EAAzChC,OAAQ6B,EAAiCG,EAAjCH,SAAUC,EAAuBE,EAAvBF,QAASH,EAAcK,EAAdL,UAEjC,OACE,sBAAK1C,UAAU,MAAf,UACI,cAAC,EAAD,CAAWJ,SAnDK,SAACE,GACrBkD,GAAS,SAAAO,GAAS,kCAASA,GAAT,IAAoBb,WAAW,EAAMN,MAAOtC,EAAYuC,KAAM,EAAGtB,OAAQ,WAmDvF,cAAC,EAAD,CAAcA,OAAQA,EAAQN,OApBf,SAACoD,GACpBb,GAAS,SAAAO,GAAS,kCAASA,GAAT,IAAoBX,SAAUiB,EAAKhB,SAAS,UAoBzDA,GACC,cAAC,EAAD,CAAOpB,QAlBO,SAACxB,GACrB,GAAGA,GAA4B,YAAvBA,EAAEI,OAAOL,UACf,OAAO,KAETgD,GAAS,SAAAO,GAAS,kCAAQA,GAAR,IAAkBV,SAAS,QAcvC,SACE,qBAAKjC,IAAKgC,MAGbF,GAAa,cAACoB,EAAD,IACb/C,EAAOgD,OAAS,GAAK,cAAC,EAAD,CAAQ7B,WAhBb,WACvBc,GAAS,SAAAO,GAAS,kCAAQA,GAAR,IAAmBb,WAAW,cClElDsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF/C,SAASgD,eAAe,W","file":"static/js/main.2aa89d57.chunk.js","sourcesContent":["import Loader from \"react-loader-spinner\";\r\nconst LoaderComponent = () => {\r\n    return ( <Loader type=\"Hearts\" color=\"#00BFFF\" height={80} width={80} /> );\r\n}\r\n \r\nexport default LoaderComponent;","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SearchBar = ({onSubmit}) => {\r\nconst [inputValue, setInputValue] = useState('')\r\n\r\nconst handleChange = ({ target }) => {\r\n  setInputValue(target.value);\r\n};\r\n\r\nconst handleSubmit = (e) => {\r\n  e.preventDefault();\r\n  onSubmit(inputValue);\r\n  setInputValue('');\r\n};\r\n\r\n  return ( \r\n    <header className=\"Searchbar\">\r\n        <form onSubmit={handleSubmit} className=\"SearchForm\">\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleChange}\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n   );\r\n}\r\n \r\nexport default SearchBar;\r\n\r\nSearchBar.propTypes = {\r\n  onSubmit: PropTypes.func,\r\n};","import PropTypes from \"prop-types\";\r\nconst ImageGalleryItem = ({item, onShow}) => {\r\n    return ( <li className=\"ImageGalleryItem\" onClick={()=> onShow(item.largeImageURL)} > \r\n    <img src={item.webformatURL} className=\"ImageGalleryItem-image\" />\r\n  </li> );\r\n}\r\n \r\nexport default ImageGalleryItem;\r\n\r\nImageGalleryItem.propTypes = {\r\n  item: PropTypes.shape({\r\n    webformatURL: PropTypes.string,\r\n    largeImageURL: PropTypes.string,\r\n  }),\r\n  onShow: PropTypes.func.isRequired,\r\n\r\n}","import PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"./imageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, onShow }) => {\r\n  return <ul className=\"ImageGallery\">\r\n      {images.map((item)=> <ImageGalleryItem key={item.id} item={item} onShow={onShow}/>)}\r\n  </ul>;\r\n};\r\n\r\nexport default ImageGallery;\r\n\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      item: PropTypes.object,\r\n      id: PropTypes.number,\r\n    })\r\n  ),\r\n  onShow: PropTypes.func.isRequired,\r\n\r\n}\r\n","import { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.closeModal);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.closeModal);\r\n  }\r\n\r\n  closeModal = (e) => {\r\n    if (e.key === \"Escape\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.props.onClose}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from \"prop-types\";\r\nconst Button = ({onLoadMore}) => {\r\n    return ( <button type='button' onClick={onLoadMore} className='Button'>Load more</button> );\r\n}\r\n \r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n    onLoadMore: PropTypes.func.isRequired,\r\n  };","import axios from 'axios'\r\n\r\nconst baseUrl = \"https://pixabay.com/api/?q=\";\r\n\r\nconst pageUrl = \"&page=\";\r\nconst keyUrl = \"&key=23381165-23963a51c09328db6c17876e7\";\r\nconst optionsUrl = \"&image_type=photo&orientation=horizontal&per_page=12\";\r\n\r\nexport const fetchImages = (query, page) => {\r\n  return axios.get(baseUrl + query + pageUrl + page + keyUrl + optionsUrl);\r\n};","import { useState, useEffect } from \"react\";\nimport LoaderComponent from \"./components/loader/Loader.jsx\";\nimport SearchBar from \"./components/searchBar/SearchBar.jsx\";\nimport ImageGallery from \"./components/imageGallery/ImageGallery.jsx\";\nimport Modal from \"./components/modal/Modal.jsx\";\nimport Button from './components/button/Button.jsx'\nimport { fetchImages } from \"./services\";\nimport \"./Styles.css\";\n\nconst initialState = {\n  images: [],\n    isLoading: false,\n    error: null,\n    query: \"\",\n    page: 1,\n    largeImg: \"\",\n    isModal: false,\n}\nconst App = () => {\n  const [state, setState] = useState(initialState)\n\n  useEffect(() => {\n    const { query, page, isLoading } = state;\n    if (isLoading) {\n      getFetchImages(query, page);\n    }\n  }, [state.isLoading])\n\n  const  handleSubmit = (inputValue) => {\n    setState(prevState=> ({ ...prevState, isLoading: true, query: inputValue, page: 1, images: [] }));\n  };\n\n  const getFetchImages = async (query, page) => {\n    try {\n      const { data } = await fetchImages(query, page);\n      const imagesDataArr = data.hits.map(\n        ({ id, webformatURL, largeImageURL }) => {\n          return { id, webformatURL, largeImageURL };\n        }\n      );\n      setState((prevState) => {\n        return {\n          ...prevState,\n          images: [...prevState.images, ...imagesDataArr],\n          page: prevState.page + 1,\n          isLoading: false,\n        };\n      });\n      if(!state.isModal) {\n        window.scrollTo({\n          top: document.body.scrollHeight,\n          behavior: \"smooth\",\n        });\n      }\n      \n    } catch (error) {\n      setState(prevState=>({ ...prevState, error, isLoading: false }));\n    }\n  };\n\n  const  onShowModal = (img) => {\n    setState(prevState=> ({ ...prevState, largeImg: img, isModal: true }));\n  };\n\n  const  onCloseModal = (e) => {\n    if(e && e.target.className !== 'Overlay') {\n      return null\n    }\n    setState(prevState=> ({...prevState,isModal: false}))\n }\n\n const  handleLoadMore = () => {\n  setState(prevState=> ({...prevState, isLoading: true}))\n}\n\nconst { images, largeImg, isModal, isLoading } = state;\n\n  return ( \n    <div className=\"App\">\n        <SearchBar onSubmit={handleSubmit}  />\n        <ImageGallery images={images} onShow={onShowModal} />\n        {isModal && (\n          <Modal onClose={onCloseModal}>\n            <img src={largeImg} />\n          </Modal>\n        )}\n        {isLoading && <LoaderComponent/>}\n        {images.length > 0 && <Button onLoadMore={handleLoadMore}/>}\n      </div>\n   );\n}\n \nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}